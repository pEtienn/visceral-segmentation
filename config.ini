############################ input configuration sections
[mri]
path_to_search = ./data/dense_vnet_abdominal/
filename_contains = MRI
spatial_window_size = (120,120,120)
interp_order = 1
axcodes=(A, R, S)

[label]
path_to_search = ./data/dense_vnet_abdominal/
filename_contains = Label
spatial_window_size = (120,120,120)
interp_order = 0
axcodes=(A, R, S)
#both type of files are in same folder buth with different sufixes: _MRI and _Label

############################## system configuration sections
[SYSTEM]
cuda_devices = ""
num_threads = 1
num_gpus = 1
model_dir = models/dense_vnet_abdominal
queue_length = 36

[NETWORK]
name = dense_vnet
# batch size 1 for inference
# batch size 6 for training
batch_size = 5

# volume level preprocessing
volume_padding_size = 0
# see https://niftynet.readthedocs.io/en/dev/window_sizes.html
# with resize option it takes the whole image
window_sampling = resize
#does not do anything currently since images are the right size

[TRAINING]
###takes a(or more) sample at random per volume
sample_per_volume = 1
#currently the sample is the whole image
lr = 0.001
loss_type = dense_vnet_abdominal.dice_hinge.dice
starting_iter = 0
save_every_n = 1000
max_iter = 3000

scaling_percentage=-10.0,0
#values taken from the article


[INFERENCE]
border = (0, 0, 0)
inference_iter = 3000
output_interp_order = 0
spatial_window_size = (120,120,120)
save_seg_dir = ./segmentation_output/

############################ custom configuration sections
[SEGMENTATION]
image = mri
label = label
label_normalisation = False
#label pre-normalized
output_prob = False
num_classes = 9
